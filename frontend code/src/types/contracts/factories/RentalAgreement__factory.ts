/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  RentalAgreement,
  RentalAgreementInterface,
} from "../RentalAgreement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tenant",
        type: "address",
      },
      {
        internalType: "string",
        name: "_propertyAddress",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_rentAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_securityDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_rules",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_dueDate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_reputationLedger",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AgreementTerminated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RentPaid",
    type: "event",
  },
  {
    inputs: [],
    name: "dueDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "landlord",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payRent",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rentAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reputationLedger",
    outputs: [
      {
        internalType: "contract IReputationLedger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rules",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "securityDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tenant",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "terminateAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type RentalAgreementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RentalAgreementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RentalAgreement__factory extends ContractFactory {
  constructor(...args: RentalAgreementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tenant: AddressLike,
    _propertyAddress: string,
    _rentAmount: BigNumberish,
    _securityDeposit: BigNumberish,
    _startDate: BigNumberish,
    _endDate: BigNumberish,
    _rules: string,
    _dueDate: BigNumberish,
    _reputationLedger: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tenant,
      _propertyAddress,
      _rentAmount,
      _securityDeposit,
      _startDate,
      _endDate,
      _rules,
      _dueDate,
      _reputationLedger,
      overrides || {}
    );
  }
  override deploy(
    _tenant: AddressLike,
    _propertyAddress: string,
    _rentAmount: BigNumberish,
    _securityDeposit: BigNumberish,
    _startDate: BigNumberish,
    _endDate: BigNumberish,
    _rules: string,
    _dueDate: BigNumberish,
    _reputationLedger: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _tenant,
      _propertyAddress,
      _rentAmount,
      _securityDeposit,
      _startDate,
      _endDate,
      _rules,
      _dueDate,
      _reputationLedger,
      overrides || {}
    ) as Promise<
      RentalAgreement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RentalAgreement__factory {
    return super.connect(runner) as RentalAgreement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RentalAgreementInterface {
    return new Interface(_abi) as RentalAgreementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RentalAgreement {
    return new Contract(address, _abi, runner) as unknown as RentalAgreement;
  }
}
