/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ReputationLedger,
  ReputationLedgerInterface,
} from "../ReputationLedger";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "RentRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "reviewer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reviewee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
    ],
    name: "ReviewSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAverageRating",
    outputs: [
      {
        internalType: "uint256",
        name: "avg",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tenant",
        type: "address",
      },
    ],
    name: "getRentHistory",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
        ],
        internalType: "struct ReputationLedger.RentRecord[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "recordRentPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rentHistory",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reviewsGiven",
    outputs: [
      {
        internalType: "address",
        name: "reviewer",
        type: "address",
      },
      {
        internalType: "address",
        name: "reviewee",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "comment",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reviewsReceived",
    outputs: [
      {
        internalType: "address",
        name: "reviewer",
        type: "address",
      },
      {
        internalType: "address",
        name: "reviewee",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "comment",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reviewee",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "comment",
        type: "string",
      },
    ],
    name: "submitReview",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506115bb806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063628721291161005b5780636287212914610102578063c8b675221461011e578063e037c4111461014e578063ec112eb51461017f5761007d565b80630ef5df14146100825780631db6b4a9146100b257806355495f1f146100e6575b600080fd5b61009c60048036038101906100979190610c98565b6101b3565b6040516100a99190610dbc565b60405180910390f35b6100cc60048036038101906100c79190610e0a565b610265565b6040516100dd959493929190610f14565b60405180910390f35b61010060048036038101906100fb9190610fff565b61038d565b005b61011c60048036038101906101179190610e0a565b610761565b005b61013860048036038101906101339190610c98565b61084e565b6040516101459190611073565b60405180910390f35b61016860048036038101906101639190610e0a565b610ac7565b60405161017692919061108e565b60405180910390f35b61019960048036038101906101949190610e0a565b610b08565b6040516101aa959493929190610f14565b60405180910390f35b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561025a57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610214565b505050509050919050565b6001602052816000526040600020818154811061028157600080fd5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff1690806002018054610304906110e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610330906110e6565b801561037d5780601f106103525761010080835404028352916020019161037d565b820191906000526020600020905b81548152906001019060200180831161036057829003601f168201915b5050505050908060030154905085565b60018360ff16101580156103a5575060058360ff1611155b6103e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103db90611163565b60405180910390fd5b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018560ff16815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020014281525090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908360ff16021790555060608201518160020190816105ae919061135e565b50608082015181600301555050600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908360ff16021790555060608201518160020190816106e8919061135e565b506080820151816003015550508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f71fc513821ecba20b382cf39c0ece746c22cec23ca4cf79bc5822461e33d13f5866040516107529190611430565b60405180910390a35050505050565b60006040518060400160405280838152602001428152509050600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508273ffffffffffffffffffffffffffffffffffffffff167f6babe7571690ed0d9a796c2c1c65a10a691935f2255a2901cb1b2edcba4de05c834260405161084192919061108e565b60405180910390a2505050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610a4757838290600052602060002090600402016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660ff1660ff1681526020016002820180546109ac906110e6565b80601f01602080910402602001604051908101604052809291908181526020018280546109d8906110e6565b8015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b50505050508152602001600382015481525050815260200190600101906108b0565b5050505090506000815103610a60576000915050610ac2565b6000805b8251811015610aaf57828181518110610a8057610a7f61144b565b5b60200260200101516040015160ff1682610a9a91906114a9565b91508080610aa7906114dd565b915050610a64565b50815181610abd9190611554565b925050505b919050565b60026020528160005260406000208181548110610ae357600080fd5b9060005260206000209060020201600091509150508060000154908060010154905082565b60006020528160005260406000208181548110610b2457600080fd5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff1690806002018054610ba7906110e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd3906110e6565b8015610c205780601f10610bf557610100808354040283529160200191610c20565b820191906000526020600020905b815481529060010190602001808311610c0357829003601f168201915b5050505050908060030154905085565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c6582610c3a565b9050919050565b610c7581610c5a565b8114610c8057600080fd5b50565b600081359050610c9281610c6c565b92915050565b600060208284031215610cae57610cad610c30565b5b6000610cbc84828501610c83565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610d0481610cf1565b82525050565b604082016000820151610d206000850182610cfb565b506020820151610d336020850182610cfb565b50505050565b6000610d458383610d0a565b60408301905092915050565b6000602082019050919050565b6000610d6982610cc5565b610d738185610cd0565b9350610d7e83610ce1565b8060005b83811015610daf578151610d968882610d39565b9750610da183610d51565b925050600181019050610d82565b5085935050505092915050565b60006020820190508181036000830152610dd68184610d5e565b905092915050565b610de781610cf1565b8114610df257600080fd5b50565b600081359050610e0481610dde565b92915050565b60008060408385031215610e2157610e20610c30565b5b6000610e2f85828601610c83565b9250506020610e4085828601610df5565b9150509250929050565b610e5381610c5a565b82525050565b600060ff82169050919050565b610e6f81610e59565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eaf578082015181840152602081019050610e94565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ed782610e75565b610ee18185610e80565b9350610ef1818560208601610e91565b610efa81610ebb565b840191505092915050565b610f0e81610cf1565b82525050565b600060a082019050610f296000830188610e4a565b610f366020830187610e4a565b610f436040830186610e66565b8181036060830152610f558185610ecc565b9050610f646080830184610f05565b9695505050505050565b610f7781610e59565b8114610f8257600080fd5b50565b600081359050610f9481610f6e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fbf57610fbe610f9a565b5b8235905067ffffffffffffffff811115610fdc57610fdb610f9f565b5b602083019150836001820283011115610ff857610ff7610fa4565b5b9250929050565b6000806000806060858703121561101957611018610c30565b5b600061102787828801610c83565b945050602061103887828801610f85565b935050604085013567ffffffffffffffff81111561105957611058610c35565b5b61106587828801610fa9565b925092505092959194509250565b60006020820190506110886000830184610f05565b92915050565b60006040820190506110a36000830185610f05565b6110b06020830184610f05565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110fe57607f821691505b602082108103611111576111106110b7565b5b50919050565b7f496e76616c696420726174696e67000000000000000000000000000000000000600082015250565b600061114d600e83610e80565b915061115882611117565b602082019050919050565b6000602082019050818103600083015261117c81611140565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826111d7565b61121e86836111d7565b95508019841693508086168417925050509392505050565b6000819050919050565b600061125b61125661125184610cf1565b611236565b610cf1565b9050919050565b6000819050919050565b61127583611240565b61128961128182611262565b8484546111e4565b825550505050565b600090565b61129e611291565b6112a981848461126c565b505050565b5b818110156112cd576112c2600082611296565b6001810190506112af565b5050565b601f821115611312576112e3816111b2565b6112ec846111c7565b810160208510156112fb578190505b61130f611307856111c7565b8301826112ae565b50505b505050565b600082821c905092915050565b600061133560001984600802611317565b1980831691505092915050565b600061134e8383611324565b9150826002028217905092915050565b61136782610e75565b67ffffffffffffffff8111156113805761137f611183565b5b61138a82546110e6565b6113958282856112d1565b600060209050601f8311600181146113c857600084156113b6578287015190505b6113c08582611342565b865550611428565b601f1984166113d6866111b2565b60005b828110156113fe578489015182556001820191506020850194506020810190506113d9565b8683101561141b5784890151611417601f891682611324565b8355505b6001600288020188555050505b505050505050565b60006020820190506114456000830184610e66565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114b482610cf1565b91506114bf83610cf1565b92508282019050808211156114d7576114d661147a565b5b92915050565b60006114e882610cf1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361151a5761151961147a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061155f82610cf1565b915061156a83610cf1565b92508261157a57611579611525565b5b82820490509291505056fea26469706673582212201770b0bdf4f8d388e793daf9b99fd82d2d954a073b625fb2b1cc574f3bdff4c064736f6c63430008120033";

type ReputationLedgerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReputationLedgerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReputationLedger__factory extends ContractFactory {
  constructor(...args: ReputationLedgerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReputationLedger & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReputationLedger__factory {
    return super.connect(runner) as ReputationLedger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReputationLedgerInterface {
    return new Interface(_abi) as ReputationLedgerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReputationLedger {
    return new Contract(address, _abi, runner) as unknown as ReputationLedger;
  }
}
